# original: Figure 2:
# "Direct Numerical Simulations of Flows with Phase Change"
# Tryggvason and Lu, Procedia IUTAM volume 15, 2015, 2-13
#
# Now:
# Son, G., V. K. Dhir, and N. Ramanujapu. 
# "Dynamics and heat transfer associated with a single bubble 
# during nucleate boiling on a horizontal surface." 
# Journal of Heat Transfer 121.3 (1999): 623-631.


# Derive the dimensionless character value 
# At 1 atm: 
# \rho_l = 958.4 kg/m^3 \rho_v =  0.597kg/m^3
# G = gravity acceleration = 9.8 m/s^2
# sigma = 0.0588N/m
# 
# character length: l_0 = \sqrt(sigma/(G*(\rho_l-\rho_v))) = 0.002507 m 
#                     testify (N/m) / (m/s^2*kg/m^3) = (kg*m/s^2/m) / (kg/(m^2*s^2)) = m^2
# character velocity: u_0 = \sqrt(g*l_0) = 0.156744
# character time: t_0 = l0/u0 = 0.0159942
# 



max_step  =  99999    # maximum timestep
stop_time = 1.0

geometry.coord_sys      = 1        # 0 => cart, 1 => RZ
geometry.prob_lo   =  0.0 0.0
geometry.prob_hi   =  1.0 2.0    # r/l_0  y/l_0
ns.freezing_model=0 0 0 0 0 0
ns.distribute_target=0 0 0 0 0 0
ns.EILE_flag=-1
ns.continuous_mof=2
ns.MOFITERMAX=15
ns.temperatureface_flag=0   # 0=use LS  1=use VOF
ns.advection_order=1 1 1 1
ns.slope_limiter_option=1  # 0=no limiter 1=minmod
ns.minimum_relative_error=1.0e-22
ns.initial_project_cycles=3
ns.initial_cg_cycles=3
ns.solvability_projection=0 # 0 since must allow for expansion
ns.project_solver_type=0 # 0MGPCG 1PCG 2 MINV=I
ns.projection_pressure_scale=1.0e+6  # non-dimensional
ns.num_materials=3 # 1: liquid 2: vapor 3: solid
ns.num_species_var=0
ns.post_init_pressure_solve=1
ns.output_drop_distribution=1

# multigrid class
mg.verbose = 0
cg.verbose = 0
# set above to 2 for maximum verbosity
mg.nu_f = 40
mg.nu_0 = 1   # 1 - v-cycle 2 - w-cycle
cg.maxiter = 400
mg.usecg=1
mg.bot_atol = 1.0e-12
mg.rtol_b = -0.01
Lp.v = 0
Lp.harmavg = 0

amr.plotfile_on_restart=1
#ns.visual_revolve=32
ns.visual_option=-1  # -2,-3 zonal tecplot, -1 plot files

amr.n_cell    = 72 144
amr.max_level =  1  
ns.ns_tiling=false
#amr.max_level =  0
# 0- 1 level 1- 2 levels  2- 3 levels
amr.n_error_buf     = 2 2 2 2 2 2 2  # number of buffer cells in error est
amr.grid_eff        = 0.7   # what constitutes an efficient grid
# above was .55 (smaller=> less boxes)
amr.blocking_factor = 4 4 4 4 4 4 4    # block factor in grid generation
amr.space_blocking_factor = 1 1 1 1 1 1
amr.time_blocking_factor=1
ns.enable_spectral=0
amr.regrid_int      = 1       # how often to regrid
amr.check_int       = 200    # number of timesteps between checkpoints
amr.check_file      = chk    # root name of checkpoint file
amr.plot_int        = 200
amr.plot_file       = plt 
amr.grid_log        = grdlog  # name of grid logging file
amr.max_grid_size   = 16
#amr.restart         = ch64k1000
#amr.trace   =1

# ------------------  INPUTS TO PHYSICS CLASS -------------------
ns.dt_cutoff      = 1.0e-11  # level 0 timestep below which we halt

mac.mac_abs_tol    = 1.0e-10

ns.cfl            = 0.5      # cfl number for hyperbolic system
ns.init_shrink    = 0.5      # scale back initial timestep
ns.change_max     = 1.1    # scale back initial timestep
# viscous force term: rho u_t = visc_coef * div ( 2 mu D)
# mu corresponds to "viscconst"
ns.visc_coef      = 1.0    
ns.visc_abs_tol   = 1.0e-10

ns.gravity        = -1.0     # nondimensional 
#  G = -9.8 m/s^2  G0 = G/l_0*t_0^2 = -9.8/0.002507*(0.0159942)^2


ns.use_lsa=0
# rhohydro+fort_denconst(im)*DrhoDT(im)*(T-fort_tempconst(im))
ns.DrhoDT = -0.0007 0.0 0.0   # units: 1/degree K
ns.DrhoDz = 0.0 0.0 0.0
# override_density=1 => rho=rho(T,z)
# "default_hydrostatic_pressure_density" called if override_density=1.
# since DrhoDz=0.0,
# gravity force is grad (-|g| denconst(1) y)/denconst(1) = -|g| 
# rho_liq=denconst(1)+denconst(1)*DrhoDT(1)*(T-tempconst(1))
ns.override_density=2 0 0
# sigma_{SV}-sigma_{SL}=sigma_{LV}cos(theta)
# sigma_{SL}=sigma_{LV}
# sigma_{SV}=(1+cos(theta)) sigma_{LV}
# theta=38 sigma_{SV}/sigma_{LV}= 1 + cos38 =  1.788
# 12 13 23  (LV SL SV)
# N/m
# 38 degrees contact angle (angle between liquid and substrate)

# ns.tension=58.8e-3 58.8e-3 105.1344e-3    # dimensional   (N/m) = (kg/s^2)
# sigma = 58.8e-3 (N/m) = (kg/s^2) 
# sigma_0 = 58.8e-3 (kg/s^2) * t_0^2 =  1.504e-5
ns.tension=1.504e-5 1.504e-5 268.9152e-3    # dimensionless  (kg/(1))

# Joule/(kg Kelvin)
# ns.stiffCP=4217.0 2029.0 700.0                         # dimensional
# 1 J/(kg*K) = 1 kg*m^2/s^2/(kg*K) = 1 m^2/(s^2*K)
# CP_0 = CP/(l_0^2)*(t_0^2) =  (1/K)
ns.stiffCP=1.7164e+5 8.25845e+4 2.849144e+4              # dimensionless

# 12 13 23 21 31 32  (12 liquid->vapor (boiling) 21 vapor->liquid condensate)
# <0 if condensation or solidification
# >0 if boiling or melting
# latent_heat[2*max_num_tension]

# Joule/kg
# ns.latent_heat=2257e+3 0.0 0.0 0.0 0.0 0.0     # dimensional 
# latent_0 = latent /(l_0^2)* (t_0^2)
ns.latent_heat=9.18645e+7 0.0 0.0 0.0 0.0 0.0     #  dimensionless

# if latent_heat<>0,
# if nucleation_period==0.0, only nucleate one bubble, 
# if nucleation_period>0.0, periodically nucleate bubbles.
ns.nucleation_period= 37.28
ns.saturation_temp=373.0 0.0 0.0 0.0 0.0 0.0
ns.temperature_primitive_variable=1 1 1
#ns.fixed_dt	  = 0.1     # hardwire dt
ns.sum_interval   = 10      # timesteps between computing mass 
ns.viscosity_state_model=0 0 0

# 6 instead of 5 signals nucleate boiling
ns.axis_dir=6
ns.xblob3=0.0  # unused
# see subroutine outside_temperature in PROB.F90

ns.yblob3=6.17e-4 # initial thermal layer (meters)                  ! 
#  = h/2

# December 21, 2017:
ns.yblob3=0.1e-4  #growth rate sensitive to the thermal layer and contact angle
# see subroutine get_internal_heat_source in PROB.F90
# see subroutine microcell_heat_model in PROB.F90
# if zblob3>0, heatcoeff=heatcoeff*dx/zblob3 (where LS_SOLID changes sign)
# if zblob3<0, then heat source in solid cells that adjoin fluid.
# if zblob3<0, then solidheat_flag should be 0. (diffuse in solid)
# if zblob3=0, then Dirichlet BC at z=zlo (no internal heat flux or 
#  other internal BC)
#  solidheat_flag=1 (dirichlet in solid),zblob3>0:
#  microlayer flux is (T-TSOLID)/zblob3 
#
# February 21, 2018:
# An improved microlayer model has been implemented.  Recommend
# ns.zblob3=0.0 for cases with Dirichlet BC at wall/fluid boundary.
#
# heat flux in the solid cells that adjoin a fluid cell:
# page 30, Sato Niceno (2015): "heater power maintained at 30kW/m^2"
# rho cp DT/dt=-div q + Q
# Q=(area) * |zblob3|/(volume)=(m^2)(W/m^2)/(m^3)=W/m^3
# for Tryggvason problem: T=383 degrees at the wall.
ns.zblob3=0.0
ns.vorterr=0.0 0.0 0.0
ns.rgasinlet=1.57 # not used
ns.vinletgas=0.0
ns.twall=0.0  # not used
ns.advbot=0.0 # initial falling (downward) speed of liquid drop (always 0)
ns.adv_vel=0.0 # keep 0.0
ns.adv_dir=2 # adv_dir=1 x direction  adv_dir=2 y direction
ns.pressure_error_cutoff=0.0 0.0 0.0 
ns.use_StewartLay=1
ns.material_type=0 0 999
# thermal conductivity: Watts/(meter Kelvin)
# ns.heatviscconst=0.680 0.0248 148.0                    # dimensional
# 1 W/(m*K) = 1(kg*m^2/s^3/(m*K)) = 1(kg*m/(s^3*K)) 
# 0.68/l_0*t_0^3 (kg/K)
ns.heatviscconst= 1.1098e-3 4.0475e-5 0.24154    # dimensionless

# liquid-vapor, liquid-solid, vapor-solid
# 0.0 means do not use.
# December 21: changed to all zeros (since substrate is only 2 cells from 
# bottom of the domain).
ns.heatviscconst_interface=0.0 0.0 0.0
# dynamic viscosity Pa * s = N s / m^2
# ns.viscconst=279E-6 12.02e-6 279E-6               # dimensional
# 1 (N/m^2)*s = 1 (kg*m/s^2/m^2)*s = 1 (kg/(m*s))
# 279e-6 *l_0 *t_0  (kg)
 ns.viscconst= 1.1187e-8 4.8197e-10 1.1187e-8  # dimensionless
# density: kg/m^3
# ns.denconst=958 0.5956 2329             # dimensional
# 958 * l_0^3  (kg)
ns.denconst= 1.50948e-5 9.38464E-9 3.6697e-5  # dimensionless

ns.FSI_flag=0 0 1
# 0=diffuse in solid, 1=dirichlet, 2=neumann
# if solidheat_flag=2, then "tempfluxsolid" is called.
# February 21, 2018 new microlayer model: solidheat_flag=1 instead of 0.
ns.solidheat_flag=1

# February 21, 2018: parameters for new microlayer model:
# material id for the substrate material that neighbors the thin film
# microlayer liquid:
ns.microlayer_substrate=3 0 0

# microlayer contact angle (radians): 38 degrees            
ns.microlayer_angle=0.663 0.0 0.0

# minimum thickness of thin liquid film (MKS)
# make this zero in order to disable the microlayer model.
# diameter of water molecule is about 2.9e-10
# 2.9e-10/l_0
# ns.microlayer_size=1.0e-9  0.0 0.0                      # dimensional
ns.microlayer_size=  1.157e-7 0.0 0.0                    # dimensionless

# resolvable scale size (2 * dx for a representative dx):
# 2.5e-3/72=3.5e-5
#ns.macrolayer_size=3.5e-5 0.0 0.0                         #dimensional
ns.macrolayer_size=0.01396 0.0 0.0                         #dimensionless

ns.tempconst=373.0 373.0 379.2        # delta T = 6.2
ns.tempcutoff=373.0 373.0 373.0 
ns.tempcutoffmax=383.0 383.0 383.0 
#(xblob,yblob)=center of vapor bubble
ns.xblob=0.0  
# 38 degrees: center-substrate=R * cos(theta)= 1.97e-4
# center=0.6944+1.97=2.6644e-4
# 2.6644e-4/l_0
ns.yblob= 0.106278             # dimensionless
ns.zblob=0.0
#ns.radblob=0.25e-3  # radius of nucleated seed.
ns.radblob=0.09972   # dimensionless

ns.n_sites=1
#ns.pos_sites=0.0 2.6644e-4 0.0 0.25e-3 
ns.pos_sites=0.0 0.106278 0.0 0.09972       # dimensionless

# x,y center of surface of HOT plate (xblob2,yblob2) (inclined)
ns.xblob2=0.0 
#ns.yblob2=0.6944e-4 # 2 * dxcoarsest=2 * 2.5e-3/72=2.5e-3/36=0.6944e-4
ns.yblob2=0.027698                         # dimensionless
ns.zblob2=0.0
ns.radblob2=0.0 # zero degrees incline (radians)
ns.radblob3=0.0
ns.denfact=1.0
ns.velfact=0.0
ns.probtype=55

#ns.mem_debug = 1
#ns.v = 1
#ns.d = 1
# 0=dirichlet at inflow
# 1=dirichlet at inflow and outflow
# 2=dirichlet at inflow and walls.
# 3=dirichlet at inflow, outflow, and walls.
ns.prescribe_temperature_outflow=3

#ns.lo_bc          = 3 3  # this option if heat source
ns.lo_bc          = 3 5
ns.hi_bc          = 3 2
ns.temperature_lo_bc          = 3 5
ns.temperature_hi_bc          = 3 2

# >>>>>>>>>>>>>  BC FLAGS <<<<<<<<<<<<<<<<
# 0 = Interior           3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

# turn any of these on to generate run-time timing stats
RunStats.statvar = godunov_box level_project sync_project


# select single or double precision of FAB output data
#        default is whatever precision code is compiled with.
#fab.precision = FLOAT     # output in FLOAT or DOUBLE
fab.precision = DOUBLE    # output in FLOAT or DOUBLE

